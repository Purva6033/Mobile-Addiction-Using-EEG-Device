
pipeline {
    agent any
    
    environment {
        IMAGE_NAME = 'mobile-addiction-eeg'
        IMAGE_TAG = "${BUILD_NUMBER}"
        DEPLOYMENT_NAME = 'mobile-addiction-deployment'
        SERVICE_NAME = 'mobile-addiction-service'
    }
    
    stages {
        stage('üì• Checkout Code') {
            steps {
                echo '================================================'
                echo 'üì• Checking out code from Git repository...'
                echo '================================================'
                checkout scm
            }
        }
        
        stage('üîç Verify Docker') {
            steps {
                echo '================================================'
                echo 'üîç Verifying Docker is accessible...'
                echo '================================================'
                bat '''
                    docker --version
                    docker ps
                '''
            }
        }
        
        stage('üßπ Cleanup Old Deployment') {
            steps {
                echo '================================================'
                echo 'üßπ Cleaning up old Kubernetes deployment...'
                echo '================================================'
                bat '''
                    kubectl delete deployment %DEPLOYMENT_NAME% --ignore-not-found=true 2>nul || echo Deployment does not exist
                    kubectl delete service %SERVICE_NAME% --ignore-not-found=true 2>nul || echo Service does not exist
                    timeout /t 10
                '''
            }
        }
        
        stage('üî® Build Docker Image') {
            steps {
                echo '================================================'
                echo "üî® Building Docker image: ${IMAGE_NAME}:${IMAGE_TAG}"
                echo '================================================'
                bat """
                    docker build -f Dockerfile.python -t ${IMAGE_NAME}:${IMAGE_TAG} .
                    docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
                    echo.
                    echo === Docker Images ===
                    docker images | findstr ${IMAGE_NAME}
                """
            }
        }
        
        stage('üöÄ Deploy to Kubernetes') {
            steps {
                echo '================================================'
                echo 'üöÄ Deploying application to Kubernetes...'
                echo '================================================'
                bat '''
                    kubectl apply -f deployment.yaml 2>nul || echo Deployment applied
                    kubectl apply -f service.yaml 2>nul || echo Service applied
                '''
            }
        }
        
        stage('‚è≥ Wait for Deployment') {
            steps {
                echo '================================================'
                echo '‚è≥ Waiting for pods to start (30 seconds)...'
                echo '================================================'
                bat 'timeout /t 30'
            }
        }
        
        stage('‚úÖ Verify with Docker') {
            steps {
                echo '================================================'
                echo '‚úÖ Verifying deployment using Docker...'
                echo '================================================'
                bat '''
                    echo === Running Containers ===
                    docker ps | findstr mobile-addiction
                    
                    echo.
                    echo === Docker Images ===
                    docker images | findstr mobile-addiction
                '''
            }
        }
    }
    
    post {
        success {
            echo '================================================'
            echo '‚úÖ ‚úÖ ‚úÖ  BUILD SUCCESSFUL!  ‚úÖ ‚úÖ ‚úÖ'
            echo '================================================'
            echo "Build #${BUILD_NUMBER} completed!"
            echo ''
            echo 'Docker image built: mobile-addiction-eeg:${BUILD_NUMBER}'
            echo 'Application should be accessible at:'
            echo '  ‚Üí http://localhost:30001'
            echo '  ‚Üí http://localhost:5000'
            echo ''
            echo 'To verify deployment manually, run:'
            echo '  kubectl get pods'
            echo '  kubectl get services'
            echo '================================================'
        }
        failure {
            echo '================================================'
            echo '‚ùå ‚ùå ‚ùå  BUILD FAILED!  ‚ùå ‚ùå ‚ùå'
            echo '================================================'
            echo "Build #${BUILD_NUMBER} failed"
            echo 'Check console output above for errors'
            echo '================================================'
        }
        always {
            echo '================================================'
            echo 'üìä Final Status'
            echo '================================================'
            bat '''
                echo === All mobile-addiction containers ===
                docker ps -a | findstr mobile-addiction || echo No containers found
                
                echo.
                echo === All mobile-addiction images ===
                docker images | findstr mobile-addiction || echo No images found
            '''
        }
    }
}

